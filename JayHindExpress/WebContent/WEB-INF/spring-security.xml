<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	xmlns:context="http://www.springframework.org/schema/context">

	<context:annotation-config />
		
<!-- 	<http auto-config="true" use-expressions="true"> -->
		<!-- Stateless RESTful services use BASIC authentication -->
		<!--  create-session="stateless" -->
	  <http auto-config="true" use-expressions="true">
			<http-basic />
  	
  			<headers>
			<cache-control />
		</headers>
		<session-management invalid-session-url="/login" >
  		 	<concurrency-control max-sessions="1" />
  		</session-management>
		<intercept-url pattern="/user/**" access="hasRole('user') and isFullyAuthenticated()" />
		<intercept-url pattern="/admin/**" access="hasRole('admin') and isFullyAuthenticated()" />
		<intercept-url pattern="/service/*" access="ROLE_REST" />
			<!-- <intercept-url pattern="/plan/*" access="ROLE_REST" />
			<intercept-url pattern="/createplan/" access="ROLE_REST" />
			<intercept-url pattern="/updateplan/*" access="ROLE_REST" />
			<intercept-url pattern="/deleteplan/*" access="ROLE_REST" />
			<intercept-url pattern="deleteall/" access="ROLE_REST" /> -->
			
		
		<access-denied-handler error-page="/403" />
			
		<custom-filter ref="requestContextFilter" before="FORM_LOGIN_FILTER"/>
		
		<form-login login-page="/login" default-target-url="/login"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" login-processing-url="/auth/login_check"
			authentication-success-handler-ref="mysuccessHandler" />
		
		<logout logout-success-url="/login?logout" delete-cookies="jsessionid" invalidate-session="true"/>
		
		<csrf />
		
		<remember-me 
		    token-validity-seconds="1209600"
			remember-me-parameter="remember-me" 
			data-source-ref="dataSource" />
			
	</http>
	
	<beans:bean id="mysuccessHandler" class="com.controller.login.redirectLogin"/>
	
	<beans:bean id="customUserDetailsService"
		class="com.service.user.customUserDetailsService">
		<beans:property name="usersByUsernameQuery" value="select user_name as username,password,enabled,accountNonExpired,accountNonLocked,credentialsNonExpired from logininformation where user_name = ?"/>
		<beans:property name="authoritiesByUsernameQuery" value="SELECT user_name as username,role as role FROM userroleinformation INNER JOIN logininformation 
 on userroleinformation.user_id = logininformation.userId LEFT Outer join
roleinformation on userroleinformation.role_id=roleinformation.role_id where user_name =?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean> 		
 		
	<beans:bean id="authenticationProvider"
		class="com.security.LimitLoginAuthenticationProvider">
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
		<beans:property name="dataSource" ref="dataSource"></beans:property>  
	</beans:bean>
 <beans:bean id="requestContextFilter" class="org.springframework.web.filter.RequestContextFilter"/>

    <authentication-manager>
    <authentication-provider ref="authenticationProvider" >
           <!--  <user-service>
                <user name="rest" password="rest" authorities="ROLE_REST"/>
            </user-service> -->
        </authentication-provider>
    </authentication-manager>
 

<beans:bean id="UserLoginDAO" class="com.dao.UserLoginDAOImpl"></beans:bean>
<beans:bean id="UserDAO" class="com.dao.UserDAOImpl"></beans:bean>
</beans:beans>